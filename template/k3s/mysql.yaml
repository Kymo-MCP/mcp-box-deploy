apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-cmp
  labels:
    app: mysql
data:
  mysql.conf: |
    [mysqld]
    default-storage-engine=INNODB
    innodb_buffer_pool_size=1G
    innodb_log_file_size=256M
    max_connections=500
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts  # ConfigMap 名称，后续需在 Pod 中引用
data:
  # 初始化脚本：创建数据库 mcp-market、用户 mcp_user、配置权限
  init-mcp-db.sql: |
    -- 1. 创建数据库 mcp-market（指定字符集 utf8mb4，避免中文乱码）
    CREATE DATABASE IF NOT EXISTS `${MCP_DB_NAME}` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    
    -- 2. 创建专用用户 mcp_user（替换 ${MCP_DB_USER} 为实际用户名，如 mcp_user；${MCP_DB_PASSWORD} 为密码）
    CREATE USER IF NOT EXISTS '${MCP_DB_USER}'@'%' IDENTIFIED BY '${MCP_DB_PASSWORD}';
    -- 说明：'@%' 表示允许从任意 IP 访问（生产环境可改为具体网段，如 '10.42.0.0/16'，更安全）
    
    -- 3. 授予 mcp_user 对 ${MCP_DB_NAME} 数据库的所有权限
    GRANT ALL PRIVILEGES ON `${MCP_DB_NAME}`.* TO '${MCP_DB_USER}'@'%';
    -- 若需限制权限（如仅增删改查，无 drop 权限），可替换为：
    -- GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER ON `${MCP_DB_NAME}`.* TO '${MCP_DB_USER}'@'%';
    
    -- 4. 刷新权限，使配置立即生效
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: ccr.ccs.tencentyun.com/itqm-private/mysql:8.4.5
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "${MYSQL_ROOT_PASSWORD}"
        - name: MCP_DB_NAME
          value: "${MCP_DB_NAME}"
        - name: MCP_DB_USER
          value: "${MCP_DB_USER}"  # 自定义 mcp-market 数据库的专用用户名
        - name: MCP_DB_PASSWORD
          value: "${MCP_DB_PASSWORD}"  # 自定义密码（生产环境需复杂，如 S3cr3t@2024）
        volumeMounts:
        - name: mysql-cmp-volume
          mountPath: /etc/mysql/conf.d
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-init-vol
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
      - name: mysql-cmp-volume
        configMap:
          name: mysql-cmp
      - name: mysql-storage
        hostPath:
          path: ${MYSQL_DATA_DIR}
          type: DirectoryOrCreate
      - name: mysql-init-vol
        configMap:
          name: mysql-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: ${MYSQL_SERVICE_NAME}
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: ${MYSQL_SERVICE_NAME}-node-port
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 31106
  selector:
    app: mysql
  type: NodePort